{
    "name": "Med-GPT",
    "version": "0.0.0-beta.2b",
    "author": "benzaria",
    "email": "benzaria@users.noreply.github.com",
    "main": "main.js",
    "preload": "preload.mjs",
    "style": "assets/global.css",
    "app": "app.nz",
    "api": "https://api.github.com/repos/Med-GPT/Med-GPT/releases/latest",
    "bin": "artifact",
    "type": "module",
    "description": "Medical 'Generative Pre-trained Transformer' + 'Retrieval Augmented Generation'",
    "license": "CC BY-NC-ND 4.0",
    "homepage": "https://Med-GPT.github.io",
    "repository": "github:Med-GPT/Med-GPT",
    "private": true,
    "maintainers": [
        "benzaria",
        "Med-GPT"
    ],
    "keywords": [
        "AI",
        "GPT",
        "RAG",
        "Med-GPT",
        "medical",
        "assistance"
    ],
    "scripts": {
        "publish": "pwsh -nop helper.ps1 publish",
        "deploy": "pnpm _deploy",
        "predeploy:build": "pnpm clean:dist",
        "deploy:build": "pnpm _deploy -build",
        "pre_deploy": "pnpm clean:publish",
        "_deploy": "pwsh -nop helper.ps1 deploy",
        "prod:test": "pwsh -nop helper.ps1 prod-test",
        "prod:push": "pwsh -nop helper.ps1 prod-push",
        "host": "vite www",
        "start": "electron out",
        "start:dist": "electron out/dist/app.asar",
        "backup": "pwsh -nop helper.ps1 backup",
        "test": "cross-env test=true pnpm dev",
        "test:cjs": "cross-env test=true pnpm dev:cjs",
        "dev": "pnpm build:dev && pnpm start",
        "dev:cjs": "cross-env format=cjs pnpm dev",
        "dev:push": "pwsh -nop helper.ps1 dev-push",
        "watch": "cross-env dev=true pnpm compile:esbuild --watch",
        "compile:vite": "vite build",
        "compile:esbuild": "tsx esbuild.config.ts",
        "predist": "pnpm clean:dist",
        "dist": "pnpm build && pnpm make",
        "make": "tsx make.config.ts",
        "forge": "electron-builder -c forge.config.json -p never",
        "forge:test": "pwsh -nop -c \"cd out && pnpm forge\"",
        "forge:win": "pnpm forge --win",
        "forge:mac": "pnpm forge --mac",
        "prebuild": "pnpm type-check && pnpm lint-check",
        "build": "cross-env prod=true pnpm build:min",
        "postbuild": "pwsh -nop hasher.ps1 out > .sha256",
        "build:min": "cross-env prod=true pnpm build:skip",
        "build:dev": "cross-env dev=true pnpm build:skip",
        "prebuild:skip": "pnpm clean:out",
        "build:skip": "pnpm compile:esbuild && pnpm compile:vite",
        "build:terser": "pnpm compile:esbuild --terser && pnpm compile:vite --terser",
        "clean:out": "node -e \"require('fs/promises').rm('out', { force: true, recursive: true })\"",
        "clean:dist": "node -e \"require('fs/promises').rm('dist', { force: true, recursive: true })\"",
        "clean:publish": "node -e \"require('fs/promises').rm('publish', { force: true, recursive: true })\"",
        "type-check": "tsc --noEmit",
        "lint-check": "eslint ./src"
    },
    "os": [
        "darwin",
        "win32",
        "linux"
    ],
    "devEngines": {
        "runtime": [
            {
                "name": "node",
                "version": ">=22",
                "onFail": "warn"
            },
            {
                "name": "electron",
                "version": ">=35",
                "onFail": "warn"
            }
        ]
    },
    "packageManager": "pnpm@10.10.0",
    "pnpm": {
        "onlyBuiltDependencies": [
            "chokidar",
            "electron",
            "electron-winstaller",
            "esbuild",
            "eslint",
            "terser",
            "typescript",
            "vite"
        ]
    },
    "dependencies": {
        "@benzn/to-ms": "^2.0.9",
        "bulma": "^1.0.4",
        "jquery": "^3.7.1"
    },
    "optionalDependencies": {
        "csstype": "^3.1.3",
        "electron-prompt": "^1.7.0",
        "environment": "^1.1.0",
        "extract-zip": "^2.0.1",
        "ts-add-js-extension": "^1.6.5",
        "typed-css-modules": "^0.9.1"
    },
    "devDependencies": {
        "@electron/asar": "^3.4.1",
        "@electron/get": "^4.0.0",
        "@eslint/js": "^9.26.0",
        "@types/adm-zip": "^0.5.7",
        "@types/jquery": "^3.5.32",
        "@types/natural": "^5.1.5",
        "@types/node": "^22.15.3",
        "@typescript-eslint/eslint-plugin": "^8.31.0",
        "@typescript-eslint/parser": "^8.31.0",
        "adm-zip": "^0.5.16",
        "chokidar": "^4.0.3",
        "cross-env": "^7.0.3",
        "electron": "^35.2.1",
        "electron-builder": "^26.0.12",
        "esbuild": "^0.25.3",
        "eslint": "^9.25.1",
        "fast-glob": "^3.3.3",
        "globals": "^16.0.0",
        "jiti": "^2.4.2",
        "natural": "^8.0.1",
        "package-json": "^10.0.1",
        "postject": "1.0.0-alpha.6",
        "string.chalk": "1.2.0",
        "terser": "^5.39.0",
        "ts-node": "^10.9.2",
        "tsx": "^4.19.3",
        "typescript": "^5.8.3",
        "vite": "^6.3.3"
    }
}